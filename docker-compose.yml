services:
  web:
    build: .
    container_name:
    ports:
      - 8080:8080
    environment:
          db-url: jdbc:postgresql://db:5432/soicalmediastorage
          db-username: 
          db-password:
      depends_on:
        -db

      restart: always


  db:
    ports:
      - 5432:5432
    container_name:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD:
    healthcheck:
      test: [“CMD-SHELL”, “pg_isready”]
        interval    : 1s
      timeout: 5s
        retries: 10

    adminer:
      image: adminer
      restart: always
      ports:
        - 8080:8080


#app:
  dataSource:
    postgres:
      port: 5432
      username: postgres
      password: password
      host: localhost
      databaseName: socialmediastorage
      jdbc-url: jdbc:postgresql://${app.datasource.postgres.host}:${app.dataSource.postgres.port}/${app.dataSource.postgres.databaseName}



version: '3.8'
#services:
  postgres:
    restart: always
    image: postgres:alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - postgres-db-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: 'teste@teste.com'
      PGADMIN_DEFAULT_PASSWORD: 'teste'
    ports:
      - 16543:80
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    networks:
      - postgres-db-network

volumes:
  postgres-db-volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
networks:
  postgres-db-network:
    driver: bridge


   # version: '3'

